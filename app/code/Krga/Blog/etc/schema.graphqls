type Query {
    posts: [Post]! @resolver(class: "Krga\\Blog\\Model\\Resolver\\GetPosts") @doc(description: "Return all active posts.")
    post(postId: Int!): Post! @resolver(class: "Krga\\Blog\\Model\\Resolver\\GetPost") @doc(description: "Return specified post.")
    postComments(postId: Int!): [Comment]! @resolver(class: "Krga\\Blog\\Model\\Resolver\\GetPostComments") @doc(description: "Return all approved comments for specified post.")
    postTags(postId: Int!): [Tag]! @resolver(class: "Krga\\Blog\\Model\\Resolver\\GetPostTags") @doc(description: "Return all tags assigned to specified post.")
    taggedPosts(tagName: String!): [Post]! @resolver(class: "Krga\\Blog\\Model\\Resolver\\GetTaggedPosts") @doc(description: "Return posts assigned to specified tag.")
}

type Mutation {
    trashPost(postId: Int!): Boolean @resolver(class: "Krga\\Blog\\Model\\Resolver\\TrashPost") @doc(description: "Moving specified post to trash.")
    restorePost(postId: Int!): Boolean @resolver(class: "Krga\\Blog\\Model\\Resolver\\RestorePost") @doc(description: "Restoring specified post from trash.")
}

type Post {
    post_id: ID!
    post_title: String!
    post_excerpt: String
    post_content: String!
    post_author: String!
    is_deleted: Int!
    created_at: String
    updated_at: String
    views: Int
}

type Comment {
    comment_id: ID!
    post_id: Int!
    author_name: String!
    author_email: String!
    content: String!
    is_approved: Int!
    parent_id: Int
    created_at: String
    updated_at: String
}

type Tag {
    tag_id: ID!
    tag_name: String!
    created_at: String
    updated_at: String
}